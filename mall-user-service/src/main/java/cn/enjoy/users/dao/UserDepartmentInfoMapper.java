package cn.enjoy.users.dao;

import cn.enjoy.sys.model.UserDepartmentInfo;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface UserDepartmentInfoMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_department_info
     *
     * @mbggenerated Tue Apr 25 16:38:22 CST 2017
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_department_info
     *
     * @mbggenerated Tue Apr 25 16:38:22 CST 2017
     */
    int insert(UserDepartmentInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_department_info
     *
     * @mbggenerated Tue Apr 25 16:38:22 CST 2017
     */
    int insertSelective(UserDepartmentInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_department_info
     *
     * @mbggenerated Tue Apr 25 16:38:22 CST 2017
     */
    UserDepartmentInfo selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_department_info
     *
     * @mbggenerated Tue Apr 25 16:38:22 CST 2017
     */
    int updateByPrimaryKeySelective(UserDepartmentInfo record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_department_info
     *
     * @mbggenerated Tue Apr 25 16:38:22 CST 2017
     */
    int updateByPrimaryKey(UserDepartmentInfo record);

    void insertUserDepartInfo(List<UserDepartmentInfo> list);

    int deleteByUserId(String userId);

    List<UserDepartmentInfo> selectByDepartmentId(String departId);

    /**
     * 查询该部门的经理
     */
    List<UserDepartmentInfo> selectAdminByDepartmentId(String departId);

    /**
     * 查询该部门的经理通过部门id和用户角色编码
     */
    List<String> selectUserIdByDepartmentIdAndRoleCode(@Param(value = "departId") String departId, @Param(value = "roleCode") String roleCode,
                                                       @Param(value = "createuser") String createuser);

    /**
     * 查询 该【用户】属不属于 该【部门】
     */
    Integer  validateUserByDepartmentId(@Param(value = "userId") String userId, @Param(value = "departId") String departId);

    /**
     * 查询该部门的经理通过userId
     */
    Integer findByUserId(String userId);

    /**
     * 根据用户ID找部门ID
     * @param userId
     * @return
     */
    String selectDepartIdByUserId(String userId);
}