<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.enjoy.users.dao.DepartmentMapper">
  <cache eviction="FIFO" flushInterval="60000" readOnly="true"/>
  <resultMap id="BaseResultMap" type="cn.enjoy.sys.model.Department">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 23 09:13:11 CST 2016.
    -->
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="parent_department" jdbcType="VARCHAR" property="parentDepartment" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="department_code" jdbcType="VARCHAR" property="departmentCode" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 23 09:13:11 CST 2016.
    -->
    ID, department_name, parent_department, status, department_code
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 23 09:13:11 CST 2016.
    -->
    select 
    <include refid="Base_Column_List" />
    from department_info
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 23 09:13:11 CST 2016.
    -->
    delete from department_info
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="cn.enjoy.sys.model.Department">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 23 09:13:11 CST 2016.
    -->
    insert into department_info (ID,  department_name,
       parent_department, status,
      department_code)
    values (#{id,jdbcType=VARCHAR},  #{departmentName,jdbcType=VARCHAR},
     #{parentDepartment,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR},
      #{departmentCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.enjoy.sys.model.Department">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 23 09:13:11 CST 2016.
    -->
    insert into department_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>

      <if test="departmentName != null">
        department_name,
      </if>
      <if test="parentDepartment != null">
        parent_department,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="departmentCode != null">
        department_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>

      <if test="departmentName != null">
        #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentDepartment != null">
        #{parentDepartment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null">
        #{departmentCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.enjoy.sys.model.Department">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 23 09:13:11 CST 2016.
    -->
    update department_info
    <set>

      <if test="departmentName != null">
        department_name = #{departmentName,jdbcType=VARCHAR},
      </if>
      <if test="parentDepartment != null">
        parent_department = #{parentDepartment,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="departmentCode != null">
        department_code = #{departmentCode,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.enjoy.sys.model.Department">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Jun 23 09:13:11 CST 2016.
    -->
    update department_info
    set
      department_name = #{departmentName,jdbcType=VARCHAR},

      parent_department = #{parentDepartment,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      department_code = #{departmentCode,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <resultMap id="BaseAddResultTree" type="cn.enjoy.sys.model.Department">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
    <result column="department_code" jdbcType="VARCHAR" property="departmentCode" />
    <result column="parent_department" jdbcType="VARCHAR" property="parentDepartment" />
  </resultMap>

  <select id="loadDepartment" parameterType="cn.enjoy.sys.model.Department" resultMap="BaseAddResultTree">
  	
    SELECT
    	ID,
    	department_name,
    		(case when parent_department = '' then null else parent_department end) as parent_department,
    	department_code 
    	from department_info 
    where  status = 1

  </select>
  
  <select id="maxDeptmentCode" parameterType="java.lang.String" resultType="java.lang.Long">
  	 select max(department_code) from department_info where department_code like '___'
  </select>
  
  
  <select id="maxLikeDeptCode" parameterType="cn.enjoy.sys.model.Department" resultType="java.lang.Long">
  	 select max(department_code) from department_info where department_code like CONCAT( ifnull(#{departmentCode},0),'____')
  </select>
  
   <select id="maxLengthDeptCode" parameterType="cn.enjoy.sys.model.Department" resultType="java.lang.Long">
  	 select max(department_code) from department_info where length(department_code) = length(#{departmentCode})
  </select>
  
   <select id="selectByLikeCode" parameterType="java.lang.String" resultMap="BaseResultMap">
  	 select * from department_info where department_code like CONCAT(#{departmentCode},'%')
  </select>

  <select id="selectByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from department_info where department_code = #{departmentCode} limit 1
  </select>


  <select id="deptartCode" parameterType="map" resultMap="BaseResultMap">
   
   	 SELECT
		id
	FROM
		department_info d
	WHERE
		d.department_name = #{string}
	AND d. STATUS = #{valid}
  </select>


  <resultMap id="BaseResultTree" type="cn.enjoy.sys.model.DepartmentTree">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="selected" jdbcType="INTEGER" property="selected" />
    <result column="parent_id" jdbcType="VARCHAR" property="parentId" />
    <collection column="{parentId=id}" ofType="cn.enjoy.sys.model.DepartmentTree" property="children" select="cn.enjoy.users.dao.DepartmentMapper.selectToTree">
    </collection>
  </resultMap>
  
   <select id="selectToTree"  resultMap="BaseResultTree">
   	 SELECT
   	   d.id AS id,
       d.department_name  AS title,
      0 as selected,
     (case when parent_department = '' then null else parent_department end) parent_id
	FROM
		department_info d
	WHERE
		 d.status = 1
     <choose>
       <when test="parentId != null and parentId !=''">
         and d.parent_department = #{parentId,jdbcType=VARCHAR}
       </when>
       <otherwise>
         and (d.parent_department IS NULL OR d.parent_department = '')
       </otherwise>
     </choose>
     <if test="deptName != null and deptName != ''">
       and department_name LIKE CONCAT('%',#{deptName},'%')
     </if>
	order by department_code
  </select>
  
   <select id="isExistSameName" parameterType="java.lang.String" resultType="java.lang.Integer">
   	 SELECT
		 count(1)
	FROM
		department_info
	WHERE  parent_department = #{parentDepartment,jdbcType=VARCHAR}
    AND `status` = 1
    AND department_name = #{departmentName,jdbcType=VARCHAR}
  </select>

  <select id="selectByUserId"  resultMap="BaseResultMap" useCache="false" >
    select
    i.id,
    i.department_name,
    i.department_code
    from department_info i,user_department_info di where i.ID = di.department_id and di.user_id=#{userId,jdbcType=VARCHAR}
  </select>

  <select id="selectDepartByUserId"  resultMap="BaseResultMap">
    select
    i.*
    from department_info i,user_department_info di where i.ID = di.department_id and di.user_id=#{userId,jdbcType=VARCHAR}
  </select>

  <resultMap id="treeViewResult" type="cn.enjoy.sys.model.TreeViewResource">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <collection column="{parentId=id}" ofType="cn.enjoy.sys.model.TreeViewResource" property="nodes" select="cn.enjoy.users.dao.DepartmentMapper.selectUserTree"/>
  </resultMap>

  <resultMap id="treeViewResult2" type="cn.enjoy.sys.model.TreeViewResource">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="text" jdbcType="VARCHAR" property="text" />
    <result column="pid" jdbcType="VARCHAR" property="pid" />
  </resultMap>

  <select id="selectUserTree" resultMap="treeViewResult">
  SELECT * from (
    SELECT
    ud.user_id       id,
    ud.department_id pid,
    u.real_name      text
    FROM user_department_info ud
    JOIN sys_user u ON ud.user_id = u.id
    WHERE u.status != 0
    UNION ALL
    SELECT
    di.ID                id,
    di.parent_department pid,
    di.department_name   text
    FROM department_info di
    ) v
  where 1=1
    <choose>
      <when test="parentId != null and parentId !=''">
        and v.pid= #{parentId,jdbcType=VARCHAR}
      </when>
      <otherwise>
        and (v.pid IS NULL OR v.pid = '')
      </otherwise>
    </choose>
  </select>

  
</mapper>