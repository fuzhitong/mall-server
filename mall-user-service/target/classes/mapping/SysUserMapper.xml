<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.enjoy.users.dao.SysUserMapper">
	<resultMap id="BaseResultMap" type="cn.enjoy.sys.model.SysUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 05 
			16:19:00 CST 2016. -->
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="user_name" jdbcType="VARCHAR" property="userName" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="password_rand" jdbcType="VARCHAR" property="passwordRand" />
		<result column="real_name" jdbcType="VARCHAR" property="realName" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="org_code" jdbcType="VARCHAR" property="orgCode" />
		<result column="identity_code" jdbcType="VARCHAR" property="identityCode" />
		<result column="sys_code" jdbcType="VARCHAR" property="sysCode" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="validate_code" jdbcType="VARCHAR" property="validateCode" />
		<result column="activated_time" jdbcType="TIMESTAMP" property="activatedTime" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="create_user" jdbcType="VARCHAR" property="createUser" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<result column="update_user" jdbcType="VARCHAR" property="updateUser" />
		<result column="birthday" jdbcType="VARCHAR" property="birthday" />
		<result column="captcha" jdbcType="VARCHAR" property="captcha" />
		<result column="captcha_time" jdbcType="TIMESTAMP" property="captchaTime" />
		<result column="qq" jdbcType="VARCHAR" property="qq" />
		<result column="wx" jdbcType="VARCHAR" property="wx" />
		<result column="icon" jdbcType="VARCHAR" property="icon" />
		<result column="position_level" jdbcType="VARCHAR" property="positionLevel" />
		<result column="position_level_str" jdbcType="VARCHAR" property="positionLevelStr" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 05 
			16:19:00 CST 2016. -->
		id, user_name, password, password_rand, real_name, mobile, email,
		org_code, identity_code,
		sys_code, status, validate_code,  activated_time, create_time,
		create_user,
		update_time, update_user, birthday, captcha, captcha_time,qq,wx,icon,position_level
	</sql>
	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 05 
			16:19:00 CST 2016. -->
		select
		id, user_name, password, password_rand, real_name, mobile, email,
		org_code, identity_code,
		sys_code, status, validate_code,  activated_time, create_time,
		create_user,
		update_time, update_user, birthday, captcha, captcha_time,qq,wx,icon,position_level,(select cname from sys_dict_data d where d.`code` =position_level and d.type='POSITION_LEVEL') position_level_str
		from sys_user
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sys_user
		where
		    email = #{email,jdbcType=VARCHAR}
		   and
		    status = 1
	</select>
	

	
	<select id="selectInIds" resultType="java.lang.String">
		select 
			group_concat(concat(user_name, '/', real_name))
		from sys_user s  
		where s.id in 
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">  
                #{item}  
        </foreach>  
	</select>
	
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 05 
			16:19:00 CST 2016. -->
		delete from sys_user
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="cn.enjoy.sys.model.SysUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 05 
			16:19:00 CST 2016. -->
		insert into sys_user (id, user_name, password,
		password_rand, real_name, mobile,
		email, org_code, identity_code,
		sys_code, status, validate_code,
		 activated_time, create_time,
		create_user, update_time, update_user,
		birthday, captcha, captcha_time,qq,wx,icon,position_level)
		values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{passwordRand,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{orgCode,jdbcType=VARCHAR},
		#{identityCode,jdbcType=VARCHAR},
		#{sysCode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{validateCode,jdbcType=VARCHAR},
		 #{activatedTime,jdbcType=TIMESTAMP},
		#{createTime,jdbcType=TIMESTAMP},
		#{createUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR},
		#{birthday,jdbcType=VARCHAR}, #{captcha,jdbcType=VARCHAR}, #{captchaTime,jdbcType=TIMESTAMP},
		#{qq,jdbcType=VARCHAR},
		#{wx,jdbcType=VARCHAR},
		#{icon,jdbcType=VARCHAR},
		#{positionLevel,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="cn.enjoy.sys.model.SysUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 05 
			16:19:00 CST 2016. -->
		insert into sys_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="passwordRand != null">
				password_rand,
			</if>
			<if test="realName != null">
				real_name,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="orgCode != null">
				org_code,
			</if>
			<if test="identityCode != null">
				identity_code,
			</if>
			<if test="sysCode != null">
				sys_code,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="validateCode != null">
				validate_code,
			</if>
			<if test="activatedTime != null">
				activated_time,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="captcha != null">
				captcha,
			</if>
			<if test="captchaTime != null">
				captcha_time,
			</if>
			<if test="qq != null">
				qq,
			</if>
			<if test="wx != null">
				wx,
			</if>
			<if test="icon != null">
				icon,
			</if>
			<if test="positionLevel != null">
				position_level,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="passwordRand != null">
				#{passwordRand,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="orgCode != null">
				#{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="identityCode != null">
				#{identityCode,jdbcType=VARCHAR},
			</if>
			<if test="sysCode != null">
				#{sysCode,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="validateCode != null">
				#{validateCode,jdbcType=VARCHAR},
			</if>
			<if test="activatedTime != null">
				#{activatedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=VARCHAR},
			</if>
			<if test="captcha != null">
				#{captcha,jdbcType=VARCHAR},
			</if>
			<if test="captchaTime != null">
				#{captchaTime,jdbcType=TIMESTAMP},
			</if>
			<if test="qq != null">
				#{qq,jdbcType=VARCHAR},
			</if>
			<if test="wx != null">
				#{wx,jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				#{icon,jdbcType=VARCHAR},
			</if>
			<if test="positionLevel != null">
				#{positionLevel,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="cn.enjoy.sys.model.SysUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 05 
			16:19:00 CST 2016. -->
		update sys_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="passwordRand != null">
				password_rand = #{passwordRand,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				real_name = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="orgCode != null">
				org_code = #{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="identityCode != null">
				identity_code = #{identityCode,jdbcType=VARCHAR},
			</if>
			<if test="sysCode != null">
				sys_code = #{sysCode,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="validateCode != null">
				validate_code = #{validateCode,jdbcType=VARCHAR},
			</if>
			<if test="activatedTime != null">
				activated_time = #{activatedTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=VARCHAR},
			</if>
			<if test="captcha != null">
				captcha = #{captcha,jdbcType=VARCHAR},
			</if>
			<if test="captchaTime != null">
				captcha_time = #{captchaTime,jdbcType=TIMESTAMP},
			</if>
			<if test="qq != null">
				qq = #{qq,jdbcType=VARCHAR},
			</if>
			<if test="wx != null">
				wx = #{wx,jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				icon = #{icon,jdbcType=VARCHAR},
			</if>
			<if test="positionLevel != null">
				position_level = #{positionLevel,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="cn.enjoy.sys.model.SysUser">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Tue Jul 05 
			16:19:00 CST 2016. -->
		update sys_user
		set user_name = #{userName,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		password_rand = #{passwordRand,jdbcType=VARCHAR},
		real_name = #{realName,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		org_code = #{orgCode,jdbcType=VARCHAR},
		identity_code = #{identityCode,jdbcType=VARCHAR},
		sys_code = #{sysCode,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		validate_code = #{validateCode,jdbcType=VARCHAR},
		activated_time = #{activatedTime,jdbcType=TIMESTAMP},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		create_user = #{createUser,jdbcType=VARCHAR},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		update_user = #{updateUser,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=VARCHAR},
		captcha = #{captcha,jdbcType=VARCHAR},
		captcha_time = #{captchaTime,jdbcType=TIMESTAMP},
		qq = #{qq,jdbcType=VARCHAR},
		wx = #{wx,jdbcType=VARCHAR},
		icon = #{icon,jdbcType=VARCHAR},
		position_level=#{positionLevel,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<select id="getUserByAccount" parameterType="map" resultMap="BaseResultMap">
		select
		id, user_name, password, password_rand, real_name, mobile, email,
		org_code, identity_code,
		sys_code, status, validate_code,  activated_time, create_time,
		create_user,
		update_time, update_user, birthday, captcha, captcha_time,qq,wx,icon,position_level,(select cname from sys_dict_data d where d.`code` =position_level and d.type='POSITION_LEVEL') position_level_str
		from sys_user
		where 1=1
		and
		(
		  email =#{loginAccount,jdbcType=VARCHAR} or
		  mobile =#{loginAccount,jdbcType=VARCHAR} or
		  user_name =#{loginAccount,jdbcType=VARCHAR}
		)
		and status=1
	</select>


	<select id="getUserByIdentityCode" parameterType="String" resultMap="BaseResultMap">
		select
		id, user_name, password, password_rand, real_name, mobile, email,
		org_code, identity_code,
		sys_code, status, validate_code,  activated_time, create_time,
		create_user,
		update_time, update_user, birthday, captcha, captcha_time,qq,wx,icon,position_level,(select cname from sys_dict_data d where d.`code` =position_level and d.type='POSITION_LEVEL') position_level_str
		from sys_user
		where 1=1
		and
		identity_code =#{identityCode,jdbcType=VARCHAR}
		and status=1
	</select>


	<select id="getUserByAccountWithLogin" parameterType="map" resultType="map">
		SELECT
				u.id,
				u.user_name,
				u.real_name,
				u.mobile,
				u.email,
				u.create_time,
				u.create_user,
				u.update_time,
				u.update_user,
				u.birthday,
				u.icon,
			  u.qq,
			  u.wx,
			  u.position_level,
             (SELECT min(dd.cname) from sys_dict_data dd where dd.type='POSITION_LEVEL' and dd.code=u.position_level) AS position,
			  GROUP_CONCAT(d.department_name) department_name
			FROM sys_user u
			LEFT JOIN user_department_info udi on u.id = udi.user_id
			LEFT JOIN department_info  d on d.ID = udi.department_id
			WHERE 1 = 1
			and
			(
			u.email =#{loginAccount,jdbcType=VARCHAR} or
			u.mobile =#{loginAccount,jdbcType=VARCHAR} or
			u.user_name =#{loginAccount,jdbcType=VARCHAR}
			)
			and u.status=1
		group by 	u.id,
		u.user_name,
		u.real_name,
		u.mobile,
		u.email,
		u.create_time,
		u.create_user,
		u.update_time,
		u.update_user,
		u.birthday,
	    u.qq,
	   u.wx,
	    u.position_level
	</select>


	<select id="checkMobileAndEmail" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(1) FROM sys_user
		<where>
			status = #{status}
			<if test="mobile != null and mobile != ''">
				and mobile = #{mobile}
			</if>
			<if test="email != null and email != ''">
				and email = #{email}
			</if>
			<if test="sysCode != null and sysCode != ''">
				and sys_code = #{sysCode}
			</if>
			<if test="userId != null and userId != ''">
				and id != #{userId}
			</if>
		</where>
	</select>
	<select id="checkUniqueness" parameterType="map" resultType="java.lang.Integer">
		select count(1)
		from sys_user u
		where u.status != #{cancelStatus} and
		(
		u.mobile = #{accountCode} OR
		u.email = #{accountCode} OR
		u.user_name = #{accountCode} )
	</select>



	<select id="getUserByMobile" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT COUNT(*) FROM sys_user WHERE mobile = #{mobileNum}
	</select>
	
	<update id="updateUserInfo">
		UPDATE sys_user SET captcha = #{captcha,jdbcType=VARCHAR}, captcha_time = #{captchaTime,jdbcType=TIMESTAMP} WHERE mobile = #{mobileNum,jdbcType=VARCHAR}
		<if test="sysCode != null and sysCode != ''">
			and sys_code = #{sysCode}
		</if>
	</update>
	<select id="getByMobileAndCaptcha" parameterType="java.lang.String" resultMap="BaseResultMap">
		SELECT * FROM sys_user WHERE mobile = #{mobileNum,jdbcType=VARCHAR} and sys_code = #{sysCode,jdbcType=VARCHAR}
	</select>
	<select id="isExistByOrgcode" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT count(*) FROM sys_user WHERE  org_code = #{orgCode,jdbcType=VARCHAR}  AND `status` > 0
	</select>

	<delete id="batchDeleteUsers" parameterType="java.util.List">
		delete from sys_user where id in
		<foreach item="itemId" collection="list" open="(" separator="," close=")">
			#{itemId}
		</foreach>
	</delete>

	<select id="queryByPage" resultMap="BaseResultMap" parameterType="java.lang.String" >
		select
			u.id,
			u.user_name,
			u.real_name,
			u.mobile,
			u.email,
			u.status,
			u.create_time,
			u.create_user,
			u.update_time,
			u.update_user,
			u.birthday,
			u.icon,
	    	u.qq,
		    u.wx,
			u.position_level,
             (SELECT min(dd.cname) from sys_dict_data dd where dd.type='POSITION_LEVEL' and dd.code=u.position_level) AS position
		from sys_user u 	 where 1 = 1
		<if test="loginAccount != null and loginAccount != ''">
			and
			(
			u.email 	LIKE CONCAT('%',#{loginAccount},'%') or
			u.mobile	LIKE CONCAT('%',#{loginAccount},'%') or
			u.real_name LIKE CONCAT('%',#{loginAccount},'%') or
			u.user_name LIKE CONCAT('%',#{loginAccount},'%')
			)
		</if>
		    and u.identity_code = #{identityCode}
			and u.status in (1,2)  AND  left(u.user_name, 5) !='admin'
	</select>

	<select id="queryList" resultMap="BaseResultMap" >
		select
		u.id,
		u.user_name,
		u.real_name,
		u.mobile,
		u.email,
		u.create_time,
		u.create_user,
		u.update_time,
		u.update_user,
		u.birthday,
		u.icon,
		u.qq,
		u.wx,
		u.position_level,
		(SELECT min(dd.cname) from sys_dict_data dd where dd.type='POSITION_LEVEL' and dd.code=u.position_level) AS position
		from sys_user u 	 where 1 = 1
		and u.status=1 AND  left(u.user_name, 5) !='admin'
	</select>

    <select id="queryContacts"  parameterType="java.lang.String"  resultMap="BaseResultMap"  >
        select
        u.id,
        u.user_name,
        u.real_name,
        u.mobile,
        u.email,
        u.create_time,
        u.create_user,
        u.update_time,
        u.update_user,
        u.birthday,
        u.qq,
        u.wx,
		c.department_name as icon,
        u.position_level
        from sys_user u  LEFT JOIN user_department_info d on u.id=d.user_id   LEFT JOIN department_info c on d.department_id=c.ID 	 where 1 = 1
        <if test="realName != null and realName != ''">
            and
            (u.real_name LIKE CONCAT('%',#{realName},'%') )
        </if>
        and u.status=1 AND  left(u.user_name, 5) !='admin'
    </select>



	<select id="queryTimeExtraPage" resultType="map" parameterType="java.lang.String" >
		select
		u.id,
		u.user_name userName,
		u.real_name realName,
		u.mobile,
		u.email,
		IFNULL(i.update_hours,0) updateHours
		from sys_user u LEFT JOIN user_hours_info  i on u.id = i.user_id and i.update_reason='3' where 1 = 1
		<if test="loginAccount != null and loginAccount != ''">
			and
			(
			u.email 	LIKE CONCAT('%',#{loginAccount},'%') or
			u.mobile	LIKE CONCAT('%',#{loginAccount},'%') or
			u.real_name LIKE CONCAT('%',#{loginAccount},'%') or
			u.user_name LIKE CONCAT('%',#{loginAccount},'%')
			)
		</if>
		and u.status=1 AND  left(u.user_name, 5) !='admin'
	</select>

	<select id="selectAllEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		email
		from sys_user
		where
		status = 1
		<if test="userId != null and userId != ''">
			and id != #{userId}
		</if>
	</select>
	<select id="selectByRoleCode" parameterType="java.lang.String" resultType="String">
		select ur.user_id
		from sys_user_role ur JOIN sys_role r on ur.role_id = r.id
		where r.role_code = #{roleCode}
	</select>

	<select id="selectUserByRoleCode" parameterType="java.lang.String" resultType="map">
		select
			sysUser.id,
			sysUser.real_name,
			r.role_name
		from
			sys_user_role ur
			LEFT JOIN sys_role r on ur.role_id = r.id
			LEFT JOIN sys_user sysUser ON ur.user_id = sysUser.id
		where
			r.role_code = #{roleCode,jdbcType=VARCHAR}
	</select>
</mapper>
